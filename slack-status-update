#!/bin/bash -e

if [ "$(uname -a)" == "Darwin" ]; then
  if ! command -v gdate >/dev/null; then
    echo "gdate required, install via 'brew install coreutils'"
    exit 1
  fi
  _date=gdate
else
  _date=date
fi

CMD_LINK=$(readlink "${BASH_SOURCE[0]}")
CMD_DIR="$( cd "$(dirname "${CMD_LINK}")" >/dev/null 2>&1 && pwd )"

# shellcheck source=/dev/null
test -r "${CMD_DIR}/.env" && source "${CMD_DIR}/.env"

if [ -z "${SLACK_TOKEN}" ]; then echo "SLACK_TOKEN env var required!"; exit 1; fi
if [ -z "${SLACK_USER_ID}" ]; then echo "SLACK_USER_ID env var required!"; exit 1; fi

DND_ENABLED="false"
STATUS_EXP_MIN=60

function usage {
    echo "Usage: $0 [lunch|workout|focus] -m 60 (optional, minutes status active) -d (optional, if supplied, enabled Do Not Disturb)"
    echo "       $0 clear"
    exit 1
}

function rand_food {
    food=(":pizza:" ":hamburger:" ":taco:" ":sandwich:" ":burrito:")
    echo "${food[$RANDOM % ${#food[@]}]}"
}

STATUS="${1}"
shift
while getopts ':m:d' options; do
  case $options in
    m)    STATUS_EXP_MIN="${OPTARG}";;
    d)    DND_ENABLED="true";;
    ?)    usage;;
  esac
done
shift $((OPTIND - 1))

case "${STATUS}" in
  clear)
    status_text=""
    status_emoji=""
  ;;
  lunch)
    status_text="Lunch"
    status_emoji="$(rand_food)"
  ;;
  workout)
    status_text="Workout"
    status_emoji=":weight_lifter:"
  ;;
  focus)
    status_text="Focus time"
    status_emoji=":headphones:"
    DND_ENABLED=true
  ;;
  *)
    usage
  ;;
esac

status_exp=$(( $($_date +%s) + $(( STATUS_EXP_MIN * 60 )) ))

body=$(echo '{
  "profile": {
    "status_text": "'"${status_text}"'",
    "status_emoji": "'"${status_emoji}"'",
    "status_expiration": '"${status_exp}"'
  }
}' | jq -r '.')

curl -s -X POST \
  -H "Content-type: application/json; charset=utf-8" \
  -H "Authorization: Bearer ${SLACK_TOKEN}" \
  -H "X-Slack-User: ${SLACK_USER_ID}" \
  -d "${body}" \
  https://slack.com/api/users.profile.set | jq .

if [ "${DND_ENABLED}" == "true" ]; then
  curl -s \
    -H "Content-type: application/x-www-form-urlencoded" \
    -H "X-Slack-User: ${SLACK_USER_ID}" \
    -d "token=${SLACK_TOKEN}&num_minutes=${STATUS_EXP_MIN}" \
    https://slack.com/api/dnd.setSnooze | jq .
fi
